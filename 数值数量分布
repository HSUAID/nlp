'''
2、各数值型特征中数值数量分布:
在数据集中:
Idx数据每个值都不同，没有作为特征的意义，target为数据标签
创建一个列表，该列表内元素为数据集所有特征名称，将Idx、target及所有类别型特征移除，列表内剩下的为全部数值型特征的名称

通过可视化结果得知：
数值型特征内有相当一部分的数值个数较少，数值类别在12个及以下的数值型特征转换为类别型
'''
# 创建category_list_other列表，里面存储的是Idx，target，ListingInfo及UserInfo的地理位置特征名称
category_list_other = ['Idx', 'UserInfo_2', 'UserInfo_4', 'UserInfo_7', 'UserInfo_8', 
                       'UserInfo_19', 'UserInfo_20', 'target', 'ListingInfo']
# 将category_list_other合并入category_list内
category_list.extend(category_list_other)
# 创建clolums_list列表，里面存储的是数据集内所有特征名称
clolums_list = list(df_dataset.columns)
# 遍历category_list内每个特征名称
for feature in category_list:
    # 使用remove函数将category_list内的每个特征名称在clolums_list内移除，保留的全部为数值型特征名称
    clolums_list.remove(feature)    
# 创建空字典numeral_dic，用来存储每个特征的数值数量，键为特征名，值为特征数量
numeral_dic = {}
# 遍历clolums_list(目前已经全部为数值型特征)内的每个特征
for feature in clolums_list:
    # 使用unique方法统计出每个特征中的类别，再使用len函数计算出该特征中类别数量，存入clolums_list
    numeral_dic[feature] = len(df_dataset[feature].unique())
# 创建Series，数据为numeral_dic内的每个特征的类别数量，索引为特征名称
df_numeral = pd.Series(numeral_dic, index=clolums_list)
# 对df_numeral进行降序排序
df_numeral.sort_values(axis=0, ascending=False, inplace=True)
# 通过bar_figure函数对df_numeral进行可视化
bar_figure(plot_data=df_numeral, title='各数值型特征数值数量', figsize=(15,12))
